// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/auth.proto

package authapi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegisterMessage struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterMessage) Reset()         { *m = RegisterMessage{} }
func (m *RegisterMessage) String() string { return proto.CompactTextString(m) }
func (*RegisterMessage) ProtoMessage()    {}
func (*RegisterMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9d38a2cdbb4f144, []int{0}
}

func (m *RegisterMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterMessage.Unmarshal(m, b)
}
func (m *RegisterMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterMessage.Marshal(b, m, deterministic)
}
func (m *RegisterMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterMessage.Merge(m, src)
}
func (m *RegisterMessage) XXX_Size() int {
	return xxx_messageInfo_RegisterMessage.Size(m)
}
func (m *RegisterMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterMessage proto.InternalMessageInfo

func (m *RegisterMessage) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegisterMessage) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type RegisterResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	TakenEmail           bool     `protobuf:"varint,2,opt,name=takenEmail,proto3" json:"takenEmail,omitempty"`
	InvalidPassword      bool     `protobuf:"varint,3,opt,name=invalidPassword,proto3" json:"invalidPassword,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterResponse) Reset()         { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()    {}
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9d38a2cdbb4f144, []int{1}
}

func (m *RegisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponse.Unmarshal(m, b)
}
func (m *RegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponse.Marshal(b, m, deterministic)
}
func (m *RegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponse.Merge(m, src)
}
func (m *RegisterResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterResponse.Size(m)
}
func (m *RegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponse proto.InternalMessageInfo

func (m *RegisterResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RegisterResponse) GetTakenEmail() bool {
	if m != nil {
		return m.TakenEmail
	}
	return false
}

func (m *RegisterResponse) GetInvalidPassword() bool {
	if m != nil {
		return m.InvalidPassword
	}
	return false
}

type LoginMessage struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginMessage) Reset()         { *m = LoginMessage{} }
func (m *LoginMessage) String() string { return proto.CompactTextString(m) }
func (*LoginMessage) ProtoMessage()    {}
func (*LoginMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9d38a2cdbb4f144, []int{2}
}

func (m *LoginMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginMessage.Unmarshal(m, b)
}
func (m *LoginMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginMessage.Marshal(b, m, deterministic)
}
func (m *LoginMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginMessage.Merge(m, src)
}
func (m *LoginMessage) XXX_Size() int {
	return xxx_messageInfo_LoginMessage.Size(m)
}
func (m *LoginMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginMessage.DiscardUnknown(m)
}

var xxx_messageInfo_LoginMessage proto.InternalMessageInfo

func (m *LoginMessage) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginMessage) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9d38a2cdbb4f144, []int{3}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *LoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ValidateJWTokenMessage struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateJWTokenMessage) Reset()         { *m = ValidateJWTokenMessage{} }
func (m *ValidateJWTokenMessage) String() string { return proto.CompactTextString(m) }
func (*ValidateJWTokenMessage) ProtoMessage()    {}
func (*ValidateJWTokenMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9d38a2cdbb4f144, []int{4}
}

func (m *ValidateJWTokenMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateJWTokenMessage.Unmarshal(m, b)
}
func (m *ValidateJWTokenMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateJWTokenMessage.Marshal(b, m, deterministic)
}
func (m *ValidateJWTokenMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateJWTokenMessage.Merge(m, src)
}
func (m *ValidateJWTokenMessage) XXX_Size() int {
	return xxx_messageInfo_ValidateJWTokenMessage.Size(m)
}
func (m *ValidateJWTokenMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateJWTokenMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateJWTokenMessage proto.InternalMessageInfo

func (m *ValidateJWTokenMessage) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ValidateJWTokenResponse struct {
	Valid                bool     `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	NewToken             string   `protobuf:"bytes,2,opt,name=newToken,proto3" json:"newToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidateJWTokenResponse) Reset()         { *m = ValidateJWTokenResponse{} }
func (m *ValidateJWTokenResponse) String() string { return proto.CompactTextString(m) }
func (*ValidateJWTokenResponse) ProtoMessage()    {}
func (*ValidateJWTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9d38a2cdbb4f144, []int{5}
}

func (m *ValidateJWTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidateJWTokenResponse.Unmarshal(m, b)
}
func (m *ValidateJWTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidateJWTokenResponse.Marshal(b, m, deterministic)
}
func (m *ValidateJWTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidateJWTokenResponse.Merge(m, src)
}
func (m *ValidateJWTokenResponse) XXX_Size() int {
	return xxx_messageInfo_ValidateJWTokenResponse.Size(m)
}
func (m *ValidateJWTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidateJWTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidateJWTokenResponse proto.InternalMessageInfo

func (m *ValidateJWTokenResponse) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *ValidateJWTokenResponse) GetNewToken() string {
	if m != nil {
		return m.NewToken
	}
	return ""
}

func init() {
	proto.RegisterType((*RegisterMessage)(nil), "authapi.RegisterMessage")
	proto.RegisterType((*RegisterResponse)(nil), "authapi.RegisterResponse")
	proto.RegisterType((*LoginMessage)(nil), "authapi.LoginMessage")
	proto.RegisterType((*LoginResponse)(nil), "authapi.LoginResponse")
	proto.RegisterType((*ValidateJWTokenMessage)(nil), "authapi.ValidateJWTokenMessage")
	proto.RegisterType((*ValidateJWTokenResponse)(nil), "authapi.ValidateJWTokenResponse")
}

func init() { proto.RegisterFile("proto/auth.proto", fileDescriptor_a9d38a2cdbb4f144) }

var fileDescriptor_a9d38a2cdbb4f144 = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x4d, 0x4f, 0xc2, 0x40,
	0x14, 0x14, 0xb4, 0x02, 0x2f, 0x18, 0xc8, 0x06, 0xb1, 0xf6, 0xa0, 0xa4, 0x27, 0x4e, 0x35, 0xc1,
	0xab, 0x89, 0x26, 0x86, 0x8b, 0x1f, 0x89, 0x36, 0x28, 0xe7, 0x15, 0x5e, 0x70, 0x03, 0xee, 0x36,
	0xdd, 0x05, 0xfe, 0xbe, 0xe9, 0x6b, 0xb7, 0xae, 0x15, 0x13, 0x6e, 0x6f, 0x66, 0xa7, 0x33, 0xb3,
	0x6f, 0x0b, 0xdd, 0x24, 0x55, 0x46, 0x5d, 0xf1, 0xb5, 0xf9, 0x8c, 0x68, 0x64, 0x8d, 0x6c, 0xe6,
	0x89, 0x08, 0xef, 0xa1, 0x13, 0xe3, 0x42, 0x68, 0x83, 0xe9, 0x33, 0x6a, 0xcd, 0x17, 0xc8, 0x7a,
	0xe0, 0xe1, 0x17, 0x17, 0x2b, 0xbf, 0x36, 0xa8, 0x0d, 0x5b, 0x71, 0x0e, 0x58, 0x00, 0xcd, 0x84,
	0x6b, 0xbd, 0x55, 0xe9, 0xdc, 0x3f, 0xa2, 0x83, 0x12, 0x87, 0x1b, 0xe8, 0x5a, 0x93, 0x18, 0x75,
	0xa2, 0xa4, 0x46, 0xe6, 0x43, 0x43, 0xaf, 0x67, 0x33, 0xd4, 0x9a, 0x7c, 0x9a, 0xb1, 0x85, 0xec,
	0x02, 0xc0, 0xf0, 0x25, 0xca, 0x31, 0x85, 0xd4, 0xe9, 0xd0, 0x61, 0xd8, 0x10, 0x3a, 0x42, 0x6e,
	0xf8, 0x4a, 0xcc, 0x5f, 0x6c, 0xe0, 0x21, 0x89, 0xaa, 0x74, 0x78, 0x07, 0xed, 0x27, 0xb5, 0x10,
	0x72, 0xff, 0xe6, 0xf5, 0x4a, 0xf3, 0x5b, 0x38, 0x21, 0x87, 0x3d, 0x6a, 0xf7, 0xc0, 0x33, 0x6a,
	0x89, 0xb2, 0xf0, 0xc8, 0x41, 0x18, 0x41, 0xff, 0x3d, 0xeb, 0xc4, 0x0d, 0x3e, 0x4c, 0x27, 0x19,
	0xe5, 0x94, 0xc9, 0xf5, 0x35, 0x57, 0xff, 0x08, 0x67, 0x15, 0x7d, 0x19, 0xdd, 0x03, 0x8f, 0xae,
	0x57, 0x04, 0xe7, 0x20, 0x6b, 0x2f, 0x71, 0x3b, 0x71, 0x92, 0x4b, 0x3c, 0x7a, 0x85, 0xa6, 0xdd,
	0x3b, 0x1b, 0x43, 0xdb, 0xce, 0x6f, 0x1a, 0x53, 0xe6, 0x47, 0xc5, 0x13, 0x47, 0x95, 0xf7, 0x0d,
	0xce, 0xff, 0x9c, 0xd8, 0x0a, 0xe1, 0xc1, 0x68, 0x0c, 0x1e, 0x2d, 0x84, 0xdd, 0x40, 0x8b, 0x06,
	0x32, 0x3b, 0x2d, 0x3f, 0x71, 0xf7, 0x1d, 0xf4, 0x7f, 0xd3, 0x8e, 0xcd, 0x12, 0xba, 0xce, 0x35,
	0xa9, 0x2d, 0x9b, 0xee, 0xe0, 0x2e, 0x4b, 0x87, 0xdd, 0x5b, 0x0c, 0x06, 0xff, 0x09, 0x7e, 0xc2,
	0x3e, 0x8e, 0xe9, 0x9f, 0xbe, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x85, 0x4e, 0x61, 0xc3, 0xe7,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RegisterClient is the client API for Register service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegisterClient interface {
	RegisterUser(ctx context.Context, in *RegisterMessage, opts ...grpc.CallOption) (*RegisterResponse, error)
}

type registerClient struct {
	cc *grpc.ClientConn
}

func NewRegisterClient(cc *grpc.ClientConn) RegisterClient {
	return &registerClient{cc}
}

func (c *registerClient) RegisterUser(ctx context.Context, in *RegisterMessage, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/authapi.Register/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegisterServer is the server API for Register service.
type RegisterServer interface {
	RegisterUser(context.Context, *RegisterMessage) (*RegisterResponse, error)
}

// UnimplementedRegisterServer can be embedded to have forward compatible implementations.
type UnimplementedRegisterServer struct {
}

func (*UnimplementedRegisterServer) RegisterUser(ctx context.Context, req *RegisterMessage) (*RegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterUser not implemented")
}

func RegisterRegisterServer(s *grpc.Server, srv RegisterServer) {
	s.RegisterService(&_Register_serviceDesc, srv)
}

func _Register_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegisterServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authapi.Register/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegisterServer).RegisterUser(ctx, req.(*RegisterMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Register_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authapi.Register",
	HandlerType: (*RegisterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUser",
			Handler:    _Register_RegisterUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/auth.proto",
}

// LoginClient is the client API for Login service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoginClient interface {
	LoginUser(ctx context.Context, in *LoginMessage, opts ...grpc.CallOption) (*LoginResponse, error)
}

type loginClient struct {
	cc *grpc.ClientConn
}

func NewLoginClient(cc *grpc.ClientConn) LoginClient {
	return &loginClient{cc}
}

func (c *loginClient) LoginUser(ctx context.Context, in *LoginMessage, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/authapi.Login/LoginUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoginServer is the server API for Login service.
type LoginServer interface {
	LoginUser(context.Context, *LoginMessage) (*LoginResponse, error)
}

// UnimplementedLoginServer can be embedded to have forward compatible implementations.
type UnimplementedLoginServer struct {
}

func (*UnimplementedLoginServer) LoginUser(ctx context.Context, req *LoginMessage) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginUser not implemented")
}

func RegisterLoginServer(s *grpc.Server, srv LoginServer) {
	s.RegisterService(&_Login_serviceDesc, srv)
}

func _Login_LoginUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoginServer).LoginUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authapi.Login/LoginUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoginServer).LoginUser(ctx, req.(*LoginMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Login_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authapi.Login",
	HandlerType: (*LoginServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LoginUser",
			Handler:    _Login_LoginUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/auth.proto",
}

// ValidateJWTTokenClient is the client API for ValidateJWTToken service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ValidateJWTTokenClient interface {
	ValidateJWTToken(ctx context.Context, in *ValidateJWTokenMessage, opts ...grpc.CallOption) (*ValidateJWTokenResponse, error)
}

type validateJWTTokenClient struct {
	cc *grpc.ClientConn
}

func NewValidateJWTTokenClient(cc *grpc.ClientConn) ValidateJWTTokenClient {
	return &validateJWTTokenClient{cc}
}

func (c *validateJWTTokenClient) ValidateJWTToken(ctx context.Context, in *ValidateJWTokenMessage, opts ...grpc.CallOption) (*ValidateJWTokenResponse, error) {
	out := new(ValidateJWTokenResponse)
	err := c.cc.Invoke(ctx, "/authapi.ValidateJWTToken/ValidateJWTToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ValidateJWTTokenServer is the server API for ValidateJWTToken service.
type ValidateJWTTokenServer interface {
	ValidateJWTToken(context.Context, *ValidateJWTokenMessage) (*ValidateJWTokenResponse, error)
}

// UnimplementedValidateJWTTokenServer can be embedded to have forward compatible implementations.
type UnimplementedValidateJWTTokenServer struct {
}

func (*UnimplementedValidateJWTTokenServer) ValidateJWTToken(ctx context.Context, req *ValidateJWTokenMessage) (*ValidateJWTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateJWTToken not implemented")
}

func RegisterValidateJWTTokenServer(s *grpc.Server, srv ValidateJWTTokenServer) {
	s.RegisterService(&_ValidateJWTToken_serviceDesc, srv)
}

func _ValidateJWTToken_ValidateJWTToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidateJWTokenMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValidateJWTTokenServer).ValidateJWTToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authapi.ValidateJWTToken/ValidateJWTToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValidateJWTTokenServer).ValidateJWTToken(ctx, req.(*ValidateJWTokenMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _ValidateJWTToken_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authapi.ValidateJWTToken",
	HandlerType: (*ValidateJWTTokenServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ValidateJWTToken",
			Handler:    _ValidateJWTToken_ValidateJWTToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/auth.proto",
}
