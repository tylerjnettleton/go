// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/register.proto

package pupapi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegisterMessage struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	FirstName            string   `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Zipcode              string   `protobuf:"bytes,4,opt,name=zipcode,proto3" json:"zipcode,omitempty"`
	Password             string   `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterMessage) Reset()         { *m = RegisterMessage{} }
func (m *RegisterMessage) String() string { return proto.CompactTextString(m) }
func (*RegisterMessage) ProtoMessage()    {}
func (*RegisterMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7f68ee4285d3eaf, []int{0}
}

func (m *RegisterMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterMessage.Unmarshal(m, b)
}
func (m *RegisterMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterMessage.Marshal(b, m, deterministic)
}
func (m *RegisterMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterMessage.Merge(m, src)
}
func (m *RegisterMessage) XXX_Size() int {
	return xxx_messageInfo_RegisterMessage.Size(m)
}
func (m *RegisterMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterMessage proto.InternalMessageInfo

func (m *RegisterMessage) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RegisterMessage) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *RegisterMessage) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *RegisterMessage) GetZipcode() string {
	if m != nil {
		return m.Zipcode
	}
	return ""
}

func (m *RegisterMessage) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type RegisterResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	TakenEmail           bool     `protobuf:"varint,2,opt,name=taken_email,json=takenEmail,proto3" json:"taken_email,omitempty"`
	InvalidPassword      bool     `protobuf:"varint,3,opt,name=invalid_password,json=invalidPassword,proto3" json:"invalid_password,omitempty"`
	InvalidFirstName     bool     `protobuf:"varint,4,opt,name=invalid_first_name,json=invalidFirstName,proto3" json:"invalid_first_name,omitempty"`
	InvalidLastName      bool     `protobuf:"varint,5,opt,name=invalid_last_name,json=invalidLastName,proto3" json:"invalid_last_name,omitempty"`
	InvalidZipcode       bool     `protobuf:"varint,6,opt,name=invalid_zipcode,json=invalidZipcode,proto3" json:"invalid_zipcode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterResponse) Reset()         { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()    {}
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7f68ee4285d3eaf, []int{1}
}

func (m *RegisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponse.Unmarshal(m, b)
}
func (m *RegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponse.Marshal(b, m, deterministic)
}
func (m *RegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponse.Merge(m, src)
}
func (m *RegisterResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterResponse.Size(m)
}
func (m *RegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponse proto.InternalMessageInfo

func (m *RegisterResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RegisterResponse) GetTakenEmail() bool {
	if m != nil {
		return m.TakenEmail
	}
	return false
}

func (m *RegisterResponse) GetInvalidPassword() bool {
	if m != nil {
		return m.InvalidPassword
	}
	return false
}

func (m *RegisterResponse) GetInvalidFirstName() bool {
	if m != nil {
		return m.InvalidFirstName
	}
	return false
}

func (m *RegisterResponse) GetInvalidLastName() bool {
	if m != nil {
		return m.InvalidLastName
	}
	return false
}

func (m *RegisterResponse) GetInvalidZipcode() bool {
	if m != nil {
		return m.InvalidZipcode
	}
	return false
}

func init() {
	proto.RegisterType((*RegisterMessage)(nil), "pupapi.RegisterMessage")
	proto.RegisterType((*RegisterResponse)(nil), "pupapi.RegisterResponse")
}

func init() { proto.RegisterFile("proto/register.proto", fileDescriptor_d7f68ee4285d3eaf) }

var fileDescriptor_d7f68ee4285d3eaf = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0xdb, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x4d, 0x4f, 0xa6, 0xa3, 0xd8, 0xba, 0x14, 0x5c, 0x2a, 0xa2, 0xf4, 0xc6, 0x03, 0x12,
	0x41, 0x1f, 0x41, 0xf4, 0xca, 0x13, 0x01, 0x6f, 0xbc, 0x09, 0x6b, 0x32, 0x96, 0xc5, 0x1c, 0x96,
	0x9d, 0x54, 0xc1, 0x37, 0xf1, 0x59, 0xbd, 0x11, 0x27, 0x99, 0xaa, 0xbd, 0xcb, 0xff, 0x7f, 0x7f,
	0x66, 0xe7, 0x00, 0x13, 0xe7, 0xab, 0xba, 0x3a, 0xf3, 0x38, 0xb7, 0x54, 0xa3, 0x8f, 0x58, 0xaa,
	0x81, 0x5b, 0x38, 0xe3, 0xec, 0xec, 0x33, 0x80, 0x51, 0xdc, 0xa2, 0x5b, 0x24, 0x32, 0x73, 0x54,
	0x13, 0xe8, 0x63, 0x61, 0x6c, 0xae, 0x83, 0x83, 0xe0, 0x68, 0x18, 0x37, 0x42, 0xed, 0x01, 0xbc,
	0x58, 0x4f, 0x75, 0x52, 0x9a, 0x02, 0x75, 0x87, 0xd1, 0x90, 0x9d, 0x3b, 0x53, 0xa0, 0xda, 0x85,
	0x61, 0x6e, 0x84, 0x76, 0x99, 0x86, 0x3f, 0x06, 0x43, 0x0d, 0xeb, 0x1f, 0xd6, 0xa5, 0x55, 0x86,
	0xba, 0xc7, 0x48, 0xa4, 0x9a, 0x42, 0xe8, 0x0c, 0xd1, 0x7b, 0xe5, 0x33, 0xdd, 0x6f, 0xfe, 0x12,
	0x3d, 0xfb, 0x0a, 0x60, 0x2c, 0xbd, 0xc5, 0x48, 0xae, 0x2a, 0x89, 0x4b, 0xd1, 0x22, 0x4d, 0x91,
	0x88, 0xdb, 0x0b, 0x63, 0x91, 0x6a, 0x1f, 0x36, 0x6a, 0xf3, 0x8a, 0x65, 0xd2, 0x34, 0xdf, 0x61,
	0x0a, 0x6c, 0x5d, 0xf1, 0x04, 0xc7, 0x30, 0xb6, 0xe5, 0x9b, 0xc9, 0x6d, 0x96, 0x2c, 0xdf, 0xec,
	0x72, 0x6a, 0xd4, 0xfa, 0x0f, 0xad, 0xad, 0x4e, 0x41, 0x49, 0xf4, 0xcf, 0xd0, 0x3d, 0x0e, 0x4b,
	0x91, 0xeb, 0xe5, 0xec, 0x27, 0xb0, 0x2d, 0xe9, 0xdf, 0x1d, 0xf4, 0xff, 0x55, 0xbe, 0x91, 0x55,
	0x1c, 0x82, 0x58, 0x89, 0xac, 0x64, 0xc0, 0xc9, 0xad, 0xd6, 0x7e, 0x6a, 0xdc, 0xf3, 0x7b, 0x08,
	0x65, 0x78, 0x75, 0x09, 0x9b, 0xf2, 0xfd, 0x48, 0xe8, 0xd5, 0x4e, 0xd4, 0x9c, 0x2f, 0x5a, 0x39,
	0xdd, 0x54, 0xaf, 0x02, 0xd9, 0xdb, 0x6c, 0xed, 0x79, 0xc0, 0x97, 0xbf, 0xf8, 0x0e, 0x00, 0x00,
	0xff, 0xff, 0x17, 0x98, 0x64, 0x70, 0x11, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RegisterClient is the client API for Register service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegisterClient interface {
	RegisterUser(ctx context.Context, in *RegisterMessage, opts ...grpc.CallOption) (*RegisterResponse, error)
}

type registerClient struct {
	cc *grpc.ClientConn
}

func NewRegisterClient(cc *grpc.ClientConn) RegisterClient {
	return &registerClient{cc}
}

func (c *registerClient) RegisterUser(ctx context.Context, in *RegisterMessage, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/pupapi.Register/RegisterUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegisterServer is the server API for Register service.
type RegisterServer interface {
	RegisterUser(context.Context, *RegisterMessage) (*RegisterResponse, error)
}

// UnimplementedRegisterServer can be embedded to have forward compatible implementations.
type UnimplementedRegisterServer struct {
}

func (*UnimplementedRegisterServer) RegisterUser(ctx context.Context, req *RegisterMessage) (*RegisterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterUser not implemented")
}

func RegisterRegisterServer(s *grpc.Server, srv RegisterServer) {
	s.RegisterService(&_Register_serviceDesc, srv)
}

func _Register_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegisterServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pupapi.Register/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegisterServer).RegisterUser(ctx, req.(*RegisterMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Register_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pupapi.Register",
	HandlerType: (*RegisterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUser",
			Handler:    _Register_RegisterUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/register.proto",
}
